<?xml version="1.0"?>

<robot name="tether" xmlns:xacro="http://wiki.ros.org/xacro">

  <!-- Tweakable Parameters -->
  <xacro:property name="tether_length" value="0.5" /> <!-- length of entire tether (meters) -->
  <xacro:property name="cylinder_radius" value="0.002" /> <!-- radius of the cylinder element (meters)-->
  <xacro:property name="element_qty" value="20" /> <!-- numbers of element to form the tether-->
  <xacro:property name="sphere_radius" value="${cylinder_radius*1.5}" /> <!-- radius of the joint that connects the cylinder element (meters) -->
  <xacro:property name="mass" value="0.001" /> <!-- mass of the element (kg) -->
  <xacro:property name="cylinder_length" value="${tether_length/element_qty}" />

  <xacro:property name="virtual_link_mass" value="0.01" />
  <xacro:property name="virtual_link_inertia" value="${0.4 * virtual_link_mass * 0.001}" />

  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>

  <material name="red">
    <color rgba="1 0 0 1"/>
  </material>


  <!-- 
  Element made up for the tether
  Element is formed by one cylinder and one sphere, connected as: -o
  Tether is formed by n elements as: -o-o-o-o-o-o-o , with - as head(origin), o as tail
  Origin of element(*):  located at *-o
  -->
  <xacro:macro name="tether_element" params="suffix *cylinder_origin *sphere_origin">
    <link name="element_${suffix}">
      <inertial>
        <mass value="${mass}" />
        <xacro:insert_block name="cylinder_origin" />
        <inertia ixx="${0.0833333 * mass * (3 * cylinder_radius * cylinder_radius + cylinder_length * cylinder_length)}" ixy="0.0" ixz="0.0"
          iyy="${0.0833333 * mass * (3 * cylinder_radius * cylinder_radius + cylinder_length * cylinder_length)}" iyz="0.0"
          izz="${0.5 * mass * cylinder_radius * cylinder_radius}" />
      </inertial>
      <!-- cylinder -->
      <visual name="cylinder_visual"> 
        <xacro:insert_block name="cylinder_origin" />
        <geometry>
          <cylinder length="${cylinder_length}" radius="${cylinder_radius}"/>
        </geometry>
        <material name="black" />
      </visual>
      <collision name="cylinder_collision">
        <xacro:insert_block name="cylinder_origin" />
        <geometry>
          <cylinder length="${cylinder_length}" radius="${cylinder_radius}" />
        </geometry>
      </collision>
      <!-- sphere for visual only -->
      <!-- <visual name="sphere_visual">
        <xacro:insert_block name="sphere_origin" />
        <geometry>
          <sphere radius="${sphere_radius}" />
        </geometry>
        <material name="red" />
      </visual> -->
    </link>

    <gazebo reference="element_${suffix}">
      <material>Gazebo/Black</material>
      <selfCollide>false</selfCollide>
      <gravity>true</gravity>
      <kinematic>false</kinematic>
      <static>false</static>
      <disableFixedJointLumping>true</disableFixedJointLumping>
      <mu1>0.0</mu1>
      <mu2>0.0</mu2>
    </gazebo>

  </xacro:macro>

  <!-- connect all the link to form a chain by recursion-->
  <xacro:macro name="chain" params="link_qty">
    <!-- call some macros or do other things -->

    <xacro:tether_element suffix="${element_qty - link_qty}">
      <origin xyz="0 0 ${tether_length/element_qty * 0.5}" rpy="0 0 0" />
      <origin xyz="0 0 ${tether_length/element_qty}" rpy="0 0 0" />
    </xacro:tether_element>

    <xacro:if value="${link_qty-1}">

      <joint name="joint_${element_qty - link_qty}_x" type="continuous">
        <origin xyz="0 0 ${tether_length/element_qty}" rpy="0 0 0" />
        <axis xyz = "1 0 0" />
        <!-- <limit effort="1000.0" lower="${pi}" upper="${pi}" velocity="0.5"/> -->
        <parent link="element_${element_qty - link_qty}" />
        <child link="element_${element_qty - link_qty+1}" />
        <dynamics damping="0.0" friction="0.0"/>
      </joint>
      <!-- <joint name="joint_${element_qty - link_qty}_y" type="continuous">
        <origin xyz="0 0 ${tether_length/element_qty}" rpy="0 0 0" />
        <axis xyz = "0 1 0" />
        <parent link="element_${element_qty - link_qty}" />
        <child link="element_${element_qty - link_qty+1}" />
      </joint> -->

      <gazebo reference="joint_${element_qty - link_qty}_x">
        <implicitSpringDamper>true</implicitSpringDamper>
      </gazebo>

      <xacro:chain link_qty="${link_qty-1}" />
    </xacro:if>

  </xacro:macro>


  <!-- add head and tail to the chain to complete the tether -->
  <xacro:macro name="tether" params="connect_to">

    <gazebo>
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNamespace>/tether</robotNamespace>
        <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
        <legacyModeNS>true</legacyModeNS>
      </plugin>
    </gazebo>

    <!-- head connected to tcp joint of end effector-->
    <xacro:if value="${connect_to == 'tcp'}">
      <!-- create ball joint my having two continuous joint in different axis-->
      <joint name="effector_tether_joint_x" type="continuous">
        <parent link="${connect_to}"/>
        <child link="element_0"/>
        <axis xyz="1 0 0" />
      </joint>
      <!-- <joint name="effector_tether_joint_y" type="continuous">
        <parent link="${connect_to}"/>
        <child link="element_0"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <axis xyz="0 1 0" />
      </joint> -->
    </xacro:if>

    <!-- chain -->
    <xacro:chain link_qty="${element_qty}" />

    <!-- tail connected to the cone -->
    <joint name="tether_cone_joint_x" type="continuous">
      <origin xyz="0 0 ${tether_length/element_qty}" rpy="0 0 0"/>
      <!-- <axis xyz="1 0 0" /> -->
      <parent link="element_${element_qty-1}" />
      <child link="tether_tail" />
    </joint>
    <!-- <joint name="tether_cone_joint_y" type="continuous">
      <origin xyz="0 0 ${tether_length/element_qty}" rpy="0 0 0"/>
      <axis xyz="0 1 0" />
      <parant link="element_${element_qty-1}" />
      <child link="tether_tail" />
    </joint> -->
    <link name="tether_tail">
      <inertial>
        <mass value="${virtual_link_mass}" />
        <inertia ixx="${virtual_link_inertia}" ixy="0" ixz="0" iyy="${virtual_link_inertia}" iyz="0" izz="${virtual_link_inertia}" />
      </inertial>
    </link>

    <gazebo reference="tether_tail">
      <gravity>true</gravity>
      <kinematic>false</kinematic>
    </gazebo>

  </xacro:macro>

  <!-- <xacro:tether connect_to = "" > -->


</robot>