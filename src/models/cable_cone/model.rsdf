<?xml version="1.0" ?>
<%
  # Cone with cable connected
  # Consists of cone link to a ring formed by small cylinder element
  # SI units (length in meters, weight in kg)

  #Geometry
  pi = 3.1415
  cable_length = 0.3
  cylinder_radius = 0.002
  element_qty = 10
  cylinder_length = cable_length/element_qty
  ring_radius = 0.02
  #Inertia
  cable_mass = 0.01
  element_mass = cable_mass/element_qty
  cylinder_ixx = element_mass/12 * cylinder_length * cylinder_length + element_mass/4 * cylinder_radius * cylinder_radius
  cylinder_izz = element_mass/2 * cylinder_radius * cylinder_radius
  ring_mass = 0.005
  ring_ixx = ring_mass/2 * ring_radius * ring_radius
  ring_izz = ring_mass * ring_radius * ring_radius
  #Cable Joint Property
  cable_joint_damping = 10.0
  cable_joint_friction = 0.0
  #Anchor Point
  anchor_x = 0
  anchor_y = -0.34
  anchor_z = 1.40
  

  # chassis_dx   = 1.0
  # chassis_dy   = 0.5
  # chassis_dz   = 0.1
  # wheel_radius = 0.15
  # wheel_width  = 0.08
  # chassis_z0   = wheel_radius
  # wheel_x0     = chassis_dx*0.5
  # wheel_y0     = chassis_dy*0.5 + wheel_width*0.6

  # wheel_locations = {
  #   "front_left"  => {:x0 => wheel_x0, :y0 => wheel_y0 },
  #   "front_right" => {:x0 => wheel_x0, :y0 => -wheel_y0 },
  #   "rear_left"   => {:x0 => -wheel_x0, :y0 => wheel_y0 },
  #   "rear_right"  => {:x0 => -wheel_x0, :y0 => -wheel_y0 },
  # }

  # # inertia
  # chassis_mass = 10
  # chassis_ixx  = chassis_mass/12.0 * (chassis_dy**2 + chassis_dz**2)
  # chassis_iyy  = chassis_mass/12.0 * (chassis_dz**2 + chassis_dx**2)
  # chassis_izz  = chassis_mass/12.0 * (chassis_dx**2 + chassis_dy**2)
  # # chassis c.g. offset from center of box
  # chassis_cgx  = chassis_dx*0.1
  # chassis_cgy  = 0 
  # chassis_cgz  = 0 
  # wheel_mass   = 0.5
  # wheel_ixx    = wheel_mass * (wheel_radius**2 / 4.0 + wheel_width**2 / 12.0)
  # wheel_iyy    = wheel_mass * (wheel_radius**2 / 4.0 + wheel_width**2 / 12.0)
  # wheel_izz    = wheel_mass/2.0 * wheel_radius**2
%>
<sdf version="1.5">
  <model name="cable_cone">
    <!-- <self_collide>true</self_collide> -->
    <link name='cone'>
      <pose>0 0 0 0 0 0</pose>
      <inertial>
        <mass>0.1</mass>
      </inertial>

      <collision name='base_collision'>
        <geometry>
          <cylinder>
            <radius>0.35</radius>
            <length>0.01</length>
          </cylinder>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>1</mu>
              <mu2>1</mu2>
            </ode>
          </friction>
        </surface>
      </collision>

      <visual name='base_visual'>
        <geometry>
          <cylinder>
            <radius>0.35</radius>
            <length>0.01</length>
          </cylinder>
        </geometry>
      </visual>

      <collision name='rod_collision'>
        <pose>0 -0.34 0.75 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.009</radius>
            <length>1.5</length>
          </cylinder>
        </geometry>
      </collision>

      <visual name='rod_visual'>
        <pose>0 -0.34 0.75 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.009</radius>
            <length>1.5</length>
          </cylinder>
        </geometry>
      </visual>

      <sensor name="cone_imu" type="imu">
        <always_on>true</always_on>
        <update_rate>10.0</update_rate>
        <visualize>true</visualize>
        <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
          <topicName>imu</topicName>
          <bodyName>cone</bodyName>
          <updateRateHZ>5.0</updateRateHZ>
          <gaussianNoise>0.0</gaussianNoise>
          <xyzOffset>0 0 0</xyzOffset>
          <rpyOffset>0 0 0</rpyOffset>
          <frameName>cone</frameName>
        </plugin>
      </sensor>

      <sensor name="contact_sensor" type="contact">
        <always_on>true</always_on>
        <update_rate>10.0</update_rate>
        <contact>
          <collision>base_collision</collision>
        </contact>
        <plugin filename="libgazebo_ros_bumper.so" name="bumper_plugin">
          <robotNamespace>cable_cone</robotNamespace>
          <updateRateHZ>10.0</updateRateHZ>
          <bumperTopicName>bumper</bumperTopicName>
          <frameName>world</frameName>
        </plugin>
      </sensor>

    </link>

    <link name="mass">
      <pose>0 -0.35 0.5 0 0 0</pose>
      <inertial>
        <mass>1</mass>
      </inertial>

      <collision name='mass_collision'>
        <geometry>
          <cylinder>
            <radius>0.05</radius>
            <length>0.01</length>
          </cylinder>
        </geometry>
      </collision>

      <visual name='mass_visual'>
        <geometry>
          <cylinder>
            <radius>0.05</radius>
            <length>0.01</length>
          </cylinder>
        </geometry>
      </visual>

    </link>

    <joint type="fixed" name="mass_joint">
      <parent>cone</parent>
      <child>mass</child>
    </joint>

    <link name="link0">
      <pose> <%= anchor_x %> <%= anchor_y - cylinder_length/2%> <%= anchor_z %> <%=  pi/2 %> 0 0</pose>
      <inertial>
        <mass> <%= element_mass %> </mass>
        <inertia>
          <ixx><%= cylinder_ixx %></ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy><%= cylinder_ixx %></iyy>
          <iyz>0.0</iyz>
          <izz><%= cylinder_izz %></izz>
        </inertia>
      </inertial>

      <collision name='link0_collision'>
        <geometry>
          <cylinder>
            <radius><%= cylinder_radius %></radius>
            <length><%= cylinder_length %></length>
          </cylinder>
        </geometry>
      </collision>

      <visual name='link0_collision'>
        <geometry>
          <cylinder>
            <radius><%= cylinder_radius %></radius>
            <length><%= cylinder_length %></length>
          </cylinder>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Black</name>
          </script>
        </material>
      </visual>
    </link>

    <joint name="joint0" type="universal">
      <pose>0 0 <%= -cylinder_length/2%> 0 0 0</pose>
      <parent>cone</parent>
      <child>link0</child>
    </joint>

    <% for i in 1..element_qty-1 do %>
    <link name="link<%= i %>">
      <pose> <%= anchor_x %> <%= anchor_y - cylinder_length/2 - i*cylinder_length %> <%= anchor_z %> <%=  pi/2 %> 0 0</pose>
      <inertial>
        <mass> <%= element_mass %> </mass>
        <inertia>
          <ixx><%= cylinder_ixx %></ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy><%= cylinder_ixx %></iyy>
          <iyz>0.0</iyz>
          <izz><%= cylinder_izz %></izz>
        </inertia>
      </inertial>

      <collision name='link<%= i %>_collision'>
        <geometry>
          <cylinder>
            <radius><%= cylinder_radius %></radius>
            <length><%= cylinder_length %></length>
          </cylinder>
        </geometry>
      </collision>

      <visual name='link<%= i %>_collision'>
        <geometry>
          <cylinder>
            <radius><%= cylinder_radius %></radius>
            <length><%= cylinder_length %></length>
          </cylinder>
        </geometry>
        <material>
          <script>
            <uri>file://media/materials/scripts/gazebo.material</uri>
            <name>Gazebo/Black</name>
          </script>
        </material>
      </visual>
    </link>

    <joint name="joint<%= i %>" type="universal">
      <pose>0 0 <%= -cylinder_length/2 %> 0 0 0</pose>
      <parent>link<%= i-1 %></parent>
      <child>link<%= i %></child>
    </joint>

    <%end%>

    <link name="ring">
      <pose><%= anchor_x %> <%= anchor_y - element_qty*cylinder_length - ring_radius%> <%= anchor_z%> 0 0 0</pose>
      <inertial>
        <mass><%=ring_mass%></mass>
         <inertia>
          <ixx><%= ring_ixx %></ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy><%= ring_ixx %></iyy>
          <iyz>0.0</iyz>
          <izz><%= ring_izz %></izz>
        </inertia>
      </inertial>

      <collision name="ring_collision">
        <geometry>
          <mesh>
            <uri>model://cable_cone/meshes/ring.stl</uri>
          </mesh>
        </geometry>
      </collision>

      <visual name="ring_visual">
        <geometry>
          <mesh>
            <uri>model://cable_cone/meshes/ring.dae</uri>
          </mesh>
        </geometry>
      </visual>
    </link>

    <joint name="ring_joint" type="universal">
      <pose>0 <%=ring_radius%> 0 0 0 0</pose>
      <parent>link<%= element_qty-1%></parent>
      <child>ring</child>
    </joint>

  </model>
</sdf>
